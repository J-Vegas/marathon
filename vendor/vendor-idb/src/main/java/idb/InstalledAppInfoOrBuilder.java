// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idb.proto

package idb;

public interface InstalledAppInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:idb.InstalledAppInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string bundle_id = 1;</code>
   * @return The bundleId.
   */
  java.lang.String getBundleId();
  /**
   * <code>string bundle_id = 1;</code>
   * @return The bytes for bundleId.
   */
  com.google.protobuf.ByteString
      getBundleIdBytes();

  /**
   * <code>string name = 2;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>repeated string architectures = 3;</code>
   * @return A list containing the architectures.
   */
  java.util.List<java.lang.String>
      getArchitecturesList();
  /**
   * <code>repeated string architectures = 3;</code>
   * @return The count of architectures.
   */
  int getArchitecturesCount();
  /**
   * <code>repeated string architectures = 3;</code>
   * @param index The index of the element to return.
   * @return The architectures at the given index.
   */
  java.lang.String getArchitectures(int index);
  /**
   * <code>repeated string architectures = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the architectures at the given index.
   */
  com.google.protobuf.ByteString
      getArchitecturesBytes(int index);

  /**
   * <code>string install_type = 4;</code>
   * @return The installType.
   */
  java.lang.String getInstallType();
  /**
   * <code>string install_type = 4;</code>
   * @return The bytes for installType.
   */
  com.google.protobuf.ByteString
      getInstallTypeBytes();

  /**
   * <code>.idb.InstalledAppInfo.AppProcessState process_state = 5;</code>
   * @return The enum numeric value on the wire for processState.
   */
  int getProcessStateValue();
  /**
   * <code>.idb.InstalledAppInfo.AppProcessState process_state = 5;</code>
   * @return The processState.
   */
  idb.InstalledAppInfo.AppProcessState getProcessState();

  /**
   * <code>bool debuggable = 6;</code>
   * @return The debuggable.
   */
  boolean getDebuggable();
}
