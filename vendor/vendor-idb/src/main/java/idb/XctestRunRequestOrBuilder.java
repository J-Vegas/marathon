// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idb.proto

package idb;

public interface XctestRunRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:idb.XctestRunRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.idb.XctestRunRequest.Mode mode = 1;</code>
   * @return Whether the mode field is set.
   */
  boolean hasMode();
  /**
   * <code>.idb.XctestRunRequest.Mode mode = 1;</code>
   * @return The mode.
   */
  idb.XctestRunRequest.Mode getMode();
  /**
   * <code>.idb.XctestRunRequest.Mode mode = 1;</code>
   */
  idb.XctestRunRequest.ModeOrBuilder getModeOrBuilder();

  /**
   * <code>string test_bundle_id = 2;</code>
   * @return The testBundleId.
   */
  java.lang.String getTestBundleId();
  /**
   * <code>string test_bundle_id = 2;</code>
   * @return The bytes for testBundleId.
   */
  com.google.protobuf.ByteString
      getTestBundleIdBytes();

  /**
   * <code>repeated string tests_to_run = 3;</code>
   * @return A list containing the testsToRun.
   */
  java.util.List<java.lang.String>
      getTestsToRunList();
  /**
   * <code>repeated string tests_to_run = 3;</code>
   * @return The count of testsToRun.
   */
  int getTestsToRunCount();
  /**
   * <code>repeated string tests_to_run = 3;</code>
   * @param index The index of the element to return.
   * @return The testsToRun at the given index.
   */
  java.lang.String getTestsToRun(int index);
  /**
   * <code>repeated string tests_to_run = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the testsToRun at the given index.
   */
  com.google.protobuf.ByteString
      getTestsToRunBytes(int index);

  /**
   * <code>repeated string tests_to_skip = 4;</code>
   * @return A list containing the testsToSkip.
   */
  java.util.List<java.lang.String>
      getTestsToSkipList();
  /**
   * <code>repeated string tests_to_skip = 4;</code>
   * @return The count of testsToSkip.
   */
  int getTestsToSkipCount();
  /**
   * <code>repeated string tests_to_skip = 4;</code>
   * @param index The index of the element to return.
   * @return The testsToSkip at the given index.
   */
  java.lang.String getTestsToSkip(int index);
  /**
   * <code>repeated string tests_to_skip = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the testsToSkip at the given index.
   */
  com.google.protobuf.ByteString
      getTestsToSkipBytes(int index);

  /**
   * <code>repeated string arguments = 5;</code>
   * @return A list containing the arguments.
   */
  java.util.List<java.lang.String>
      getArgumentsList();
  /**
   * <code>repeated string arguments = 5;</code>
   * @return The count of arguments.
   */
  int getArgumentsCount();
  /**
   * <code>repeated string arguments = 5;</code>
   * @param index The index of the element to return.
   * @return The arguments at the given index.
   */
  java.lang.String getArguments(int index);
  /**
   * <code>repeated string arguments = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the arguments at the given index.
   */
  com.google.protobuf.ByteString
      getArgumentsBytes(int index);

  /**
   * <code>map&lt;string, string&gt; environment = 6;</code>
   */
  int getEnvironmentCount();
  /**
   * <code>map&lt;string, string&gt; environment = 6;</code>
   */
  boolean containsEnvironment(
      java.lang.String key);
  /**
   * Use {@link #getEnvironmentMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getEnvironment();
  /**
   * <code>map&lt;string, string&gt; environment = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getEnvironmentMap();
  /**
   * <code>map&lt;string, string&gt; environment = 6;</code>
   */

  java.lang.String getEnvironmentOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; environment = 6;</code>
   */

  java.lang.String getEnvironmentOrThrow(
      java.lang.String key);

  /**
   * <code>uint64 timeout = 7;</code>
   * @return The timeout.
   */
  long getTimeout();

  /**
   * <code>bool report_activities = 8;</code>
   * @return The reportActivities.
   */
  boolean getReportActivities();

  /**
   * <code>bool collect_coverage = 9;</code>
   * @return The collectCoverage.
   */
  boolean getCollectCoverage();
}
