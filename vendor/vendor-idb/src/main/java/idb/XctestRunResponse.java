// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idb.proto

package idb;

/**
 * Protobuf type {@code idb.XctestRunResponse}
 */
public  final class XctestRunResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:idb.XctestRunResponse)
    XctestRunResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use XctestRunResponse.newBuilder() to construct.
  private XctestRunResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private XctestRunResponse() {
    status_ = 0;
    results_ = java.util.Collections.emptyList();
    logOutput_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    coverageJson_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new XctestRunResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private XctestRunResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            status_ = rawValue;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              results_ = new java.util.ArrayList<idb.XctestRunResponse.TestRunInfo>();
              mutable_bitField0_ |= 0x00000001;
            }
            results_.add(
                input.readMessage(idb.XctestRunResponse.TestRunInfo.parser(), extensionRegistry));
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              logOutput_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            logOutput_.add(s);
            break;
          }
          case 34: {
            idb.Payload.Builder subBuilder = null;
            if (resultBundle_ != null) {
              subBuilder = resultBundle_.toBuilder();
            }
            resultBundle_ = input.readMessage(idb.Payload.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(resultBundle_);
              resultBundle_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            coverageJson_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        results_ = java.util.Collections.unmodifiableList(results_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        logOutput_ = logOutput_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return idb.Idb.internal_static_idb_XctestRunResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return idb.Idb.internal_static_idb_XctestRunResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            idb.XctestRunResponse.class, idb.XctestRunResponse.Builder.class);
  }

  /**
   * Protobuf enum {@code idb.XctestRunResponse.Status}
   */
  public enum Status
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RUNNING = 0;</code>
     */
    RUNNING(0),
    /**
     * <code>TERMINATED_NORMALLY = 1;</code>
     */
    TERMINATED_NORMALLY(1),
    /**
     * <code>TERMINATED_ABNORMALLY = 2;</code>
     */
    TERMINATED_ABNORMALLY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RUNNING = 0;</code>
     */
    public static final int RUNNING_VALUE = 0;
    /**
     * <code>TERMINATED_NORMALLY = 1;</code>
     */
    public static final int TERMINATED_NORMALLY_VALUE = 1;
    /**
     * <code>TERMINATED_ABNORMALLY = 2;</code>
     */
    public static final int TERMINATED_ABNORMALLY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Status forNumber(int value) {
      switch (value) {
        case 0: return RUNNING;
        case 1: return TERMINATED_NORMALLY;
        case 2: return TERMINATED_ABNORMALLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Status> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return idb.XctestRunResponse.getDescriptor().getEnumTypes().get(0);
    }

    private static final Status[] VALUES = values();

    public static Status valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:idb.XctestRunResponse.Status)
  }

  public interface TestRunInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idb.XctestRunResponse.TestRunInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
     * @return The status.
     */
    idb.XctestRunResponse.TestRunInfo.Status getStatus();

    /**
     * <code>string bundle_name = 2;</code>
     * @return The bundleName.
     */
    java.lang.String getBundleName();
    /**
     * <code>string bundle_name = 2;</code>
     * @return The bytes for bundleName.
     */
    com.google.protobuf.ByteString
        getBundleNameBytes();

    /**
     * <code>string class_name = 3;</code>
     * @return The className.
     */
    java.lang.String getClassName();
    /**
     * <code>string class_name = 3;</code>
     * @return The bytes for className.
     */
    com.google.protobuf.ByteString
        getClassNameBytes();

    /**
     * <code>string method_name = 4;</code>
     * @return The methodName.
     */
    java.lang.String getMethodName();
    /**
     * <code>string method_name = 4;</code>
     * @return The bytes for methodName.
     */
    com.google.protobuf.ByteString
        getMethodNameBytes();

    /**
     * <code>double duration = 5;</code>
     * @return The duration.
     */
    double getDuration();

    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
     * @return Whether the failureInfo field is set.
     */
    boolean hasFailureInfo();
    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
     * @return The failureInfo.
     */
    idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo getFailureInfo();
    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
     */
    idb.XctestRunResponse.TestRunInfo.TestRunFailureInfoOrBuilder getFailureInfoOrBuilder();

    /**
     * <code>repeated string logs = 7;</code>
     * @return A list containing the logs.
     */
    java.util.List<java.lang.String>
        getLogsList();
    /**
     * <code>repeated string logs = 7;</code>
     * @return The count of logs.
     */
    int getLogsCount();
    /**
     * <code>repeated string logs = 7;</code>
     * @param index The index of the element to return.
     * @return The logs at the given index.
     */
    java.lang.String getLogs(int index);
    /**
     * <code>repeated string logs = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the logs at the given index.
     */
    com.google.protobuf.ByteString
        getLogsBytes(int index);

    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> 
        getActivityLogsList();
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    idb.XctestRunResponse.TestRunInfo.TestActivity getActivityLogs(int index);
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    int getActivityLogsCount();
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> 
        getActivityLogsOrBuilderList();
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder getActivityLogsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code idb.XctestRunResponse.TestRunInfo}
   */
  public  static final class TestRunInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idb.XctestRunResponse.TestRunInfo)
      TestRunInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestRunInfo.newBuilder() to construct.
    private TestRunInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestRunInfo() {
      status_ = 0;
      bundleName_ = "";
      className_ = "";
      methodName_ = "";
      logs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      activityLogs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestRunInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestRunInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              bundleName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              className_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              methodName_ = s;
              break;
            }
            case 41: {

              duration_ = input.readDouble();
              break;
            }
            case 50: {
              idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.Builder subBuilder = null;
              if (failureInfo_ != null) {
                subBuilder = failureInfo_.toBuilder();
              }
              failureInfo_ = input.readMessage(idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(failureInfo_);
                failureInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                logs_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              logs_.add(s);
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                activityLogs_ = new java.util.ArrayList<idb.XctestRunResponse.TestRunInfo.TestActivity>();
                mutable_bitField0_ |= 0x00000002;
              }
              activityLogs_.add(
                  input.readMessage(idb.XctestRunResponse.TestRunInfo.TestActivity.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          logs_ = logs_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          activityLogs_ = java.util.Collections.unmodifiableList(activityLogs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idb.XctestRunResponse.TestRunInfo.class, idb.XctestRunResponse.TestRunInfo.Builder.class);
    }

    /**
     * Protobuf enum {@code idb.XctestRunResponse.TestRunInfo.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PASSED = 0;</code>
       */
      PASSED(0),
      /**
       * <code>FAILED = 1;</code>
       */
      FAILED(1),
      /**
       * <code>CRASHED = 2;</code>
       */
      CRASHED(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PASSED = 0;</code>
       */
      public static final int PASSED_VALUE = 0;
      /**
       * <code>FAILED = 1;</code>
       */
      public static final int FAILED_VALUE = 1;
      /**
       * <code>CRASHED = 2;</code>
       */
      public static final int CRASHED_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Status forNumber(int value) {
        switch (value) {
          case 0: return PASSED;
          case 1: return FAILED;
          case 2: return CRASHED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return idb.XctestRunResponse.TestRunInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:idb.XctestRunResponse.TestRunInfo.Status)
    }

    public interface TestRunFailureInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string failure_message = 1;</code>
       * @return The failureMessage.
       */
      java.lang.String getFailureMessage();
      /**
       * <code>string failure_message = 1;</code>
       * @return The bytes for failureMessage.
       */
      com.google.protobuf.ByteString
          getFailureMessageBytes();

      /**
       * <code>string file = 2;</code>
       * @return The file.
       */
      java.lang.String getFile();
      /**
       * <code>string file = 2;</code>
       * @return The bytes for file.
       */
      com.google.protobuf.ByteString
          getFileBytes();

      /**
       * <code>uint64 line = 3;</code>
       * @return The line.
       */
      long getLine();
    }
    /**
     * Protobuf type {@code idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo}
     */
    public  static final class TestRunFailureInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo)
        TestRunFailureInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TestRunFailureInfo.newBuilder() to construct.
      private TestRunFailureInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TestRunFailureInfo() {
        failureMessage_ = "";
        file_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TestRunFailureInfo();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TestRunFailureInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                failureMessage_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                file_ = s;
                break;
              }
              case 24: {

                line_ = input.readUInt64();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestRunFailureInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestRunFailureInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.class, idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.Builder.class);
      }

      public static final int FAILURE_MESSAGE_FIELD_NUMBER = 1;
      private volatile java.lang.Object failureMessage_;
      /**
       * <code>string failure_message = 1;</code>
       * @return The failureMessage.
       */
      public java.lang.String getFailureMessage() {
        java.lang.Object ref = failureMessage_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          failureMessage_ = s;
          return s;
        }
      }
      /**
       * <code>string failure_message = 1;</code>
       * @return The bytes for failureMessage.
       */
      public com.google.protobuf.ByteString
          getFailureMessageBytes() {
        java.lang.Object ref = failureMessage_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          failureMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILE_FIELD_NUMBER = 2;
      private volatile java.lang.Object file_;
      /**
       * <code>string file = 2;</code>
       * @return The file.
       */
      public java.lang.String getFile() {
        java.lang.Object ref = file_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          file_ = s;
          return s;
        }
      }
      /**
       * <code>string file = 2;</code>
       * @return The bytes for file.
       */
      public com.google.protobuf.ByteString
          getFileBytes() {
        java.lang.Object ref = file_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          file_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LINE_FIELD_NUMBER = 3;
      private long line_;
      /**
       * <code>uint64 line = 3;</code>
       * @return The line.
       */
      public long getLine() {
        return line_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getFailureMessageBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, failureMessage_);
        }
        if (!getFileBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, file_);
        }
        if (line_ != 0L) {
          output.writeUInt64(3, line_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getFailureMessageBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, failureMessage_);
        }
        if (!getFileBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, file_);
        }
        if (line_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, line_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo)) {
          return super.equals(obj);
        }
        idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo other = (idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo) obj;

        if (!getFailureMessage()
            .equals(other.getFailureMessage())) return false;
        if (!getFile()
            .equals(other.getFile())) return false;
        if (getLine()
            != other.getLine()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + FAILURE_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getFailureMessage().hashCode();
        hash = (37 * hash) + FILE_FIELD_NUMBER;
        hash = (53 * hash) + getFile().hashCode();
        hash = (37 * hash) + LINE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLine());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo)
          idb.XctestRunResponse.TestRunInfo.TestRunFailureInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestRunFailureInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestRunFailureInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.class, idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.Builder.class);
        }

        // Construct using idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          failureMessage_ = "";

          file_ = "";

          line_ = 0L;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestRunFailureInfo_descriptor;
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo getDefaultInstanceForType() {
          return idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.getDefaultInstance();
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo build() {
          idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo buildPartial() {
          idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo result = new idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo(this);
          result.failureMessage_ = failureMessage_;
          result.file_ = file_;
          result.line_ = line_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo) {
            return mergeFrom((idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo other) {
          if (other == idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.getDefaultInstance()) return this;
          if (!other.getFailureMessage().isEmpty()) {
            failureMessage_ = other.failureMessage_;
            onChanged();
          }
          if (!other.getFile().isEmpty()) {
            file_ = other.file_;
            onChanged();
          }
          if (other.getLine() != 0L) {
            setLine(other.getLine());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object failureMessage_ = "";
        /**
         * <code>string failure_message = 1;</code>
         * @return The failureMessage.
         */
        public java.lang.String getFailureMessage() {
          java.lang.Object ref = failureMessage_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            failureMessage_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string failure_message = 1;</code>
         * @return The bytes for failureMessage.
         */
        public com.google.protobuf.ByteString
            getFailureMessageBytes() {
          java.lang.Object ref = failureMessage_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            failureMessage_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string failure_message = 1;</code>
         * @param value The failureMessage to set.
         * @return This builder for chaining.
         */
        public Builder setFailureMessage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          failureMessage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string failure_message = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFailureMessage() {
          
          failureMessage_ = getDefaultInstance().getFailureMessage();
          onChanged();
          return this;
        }
        /**
         * <code>string failure_message = 1;</code>
         * @param value The bytes for failureMessage to set.
         * @return This builder for chaining.
         */
        public Builder setFailureMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          failureMessage_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object file_ = "";
        /**
         * <code>string file = 2;</code>
         * @return The file.
         */
        public java.lang.String getFile() {
          java.lang.Object ref = file_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            file_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string file = 2;</code>
         * @return The bytes for file.
         */
        public com.google.protobuf.ByteString
            getFileBytes() {
          java.lang.Object ref = file_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            file_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string file = 2;</code>
         * @param value The file to set.
         * @return This builder for chaining.
         */
        public Builder setFile(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          file_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string file = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFile() {
          
          file_ = getDefaultInstance().getFile();
          onChanged();
          return this;
        }
        /**
         * <code>string file = 2;</code>
         * @param value The bytes for file to set.
         * @return This builder for chaining.
         */
        public Builder setFileBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          file_ = value;
          onChanged();
          return this;
        }

        private long line_ ;
        /**
         * <code>uint64 line = 3;</code>
         * @return The line.
         */
        public long getLine() {
          return line_;
        }
        /**
         * <code>uint64 line = 3;</code>
         * @param value The line to set.
         * @return This builder for chaining.
         */
        public Builder setLine(long value) {
          
          line_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint64 line = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearLine() {
          
          line_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo)
      }

      // @@protoc_insertion_point(class_scope:idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo)
      private static final idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo();
      }

      public static idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TestRunFailureInfo>
          PARSER = new com.google.protobuf.AbstractParser<TestRunFailureInfo>() {
        @java.lang.Override
        public TestRunFailureInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestRunFailureInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TestRunFailureInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TestRunFailureInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TestAttachmentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:idb.XctestRunResponse.TestRunInfo.TestAttachment)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bytes payload = 1;</code>
       * @return The payload.
       */
      com.google.protobuf.ByteString getPayload();

      /**
       * <code>double timestamp = 2;</code>
       * @return The timestamp.
       */
      double getTimestamp();

      /**
       * <code>string name = 3;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>string uniform_type_identifier = 4;</code>
       * @return The uniformTypeIdentifier.
       */
      java.lang.String getUniformTypeIdentifier();
      /**
       * <code>string uniform_type_identifier = 4;</code>
       * @return The bytes for uniformTypeIdentifier.
       */
      com.google.protobuf.ByteString
          getUniformTypeIdentifierBytes();
    }
    /**
     * Protobuf type {@code idb.XctestRunResponse.TestRunInfo.TestAttachment}
     */
    public  static final class TestAttachment extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:idb.XctestRunResponse.TestRunInfo.TestAttachment)
        TestAttachmentOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TestAttachment.newBuilder() to construct.
      private TestAttachment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TestAttachment() {
        payload_ = com.google.protobuf.ByteString.EMPTY;
        name_ = "";
        uniformTypeIdentifier_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TestAttachment();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TestAttachment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                payload_ = input.readBytes();
                break;
              }
              case 17: {

                timestamp_ = input.readDouble();
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                uniformTypeIdentifier_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestAttachment_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestAttachment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idb.XctestRunResponse.TestRunInfo.TestAttachment.class, idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder.class);
      }

      public static final int PAYLOAD_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString payload_;
      /**
       * <code>bytes payload = 1;</code>
       * @return The payload.
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 2;
      private double timestamp_;
      /**
       * <code>double timestamp = 2;</code>
       * @return The timestamp.
       */
      public double getTimestamp() {
        return timestamp_;
      }

      public static final int NAME_FIELD_NUMBER = 3;
      private volatile java.lang.Object name_;
      /**
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int UNIFORM_TYPE_IDENTIFIER_FIELD_NUMBER = 4;
      private volatile java.lang.Object uniformTypeIdentifier_;
      /**
       * <code>string uniform_type_identifier = 4;</code>
       * @return The uniformTypeIdentifier.
       */
      public java.lang.String getUniformTypeIdentifier() {
        java.lang.Object ref = uniformTypeIdentifier_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uniformTypeIdentifier_ = s;
          return s;
        }
      }
      /**
       * <code>string uniform_type_identifier = 4;</code>
       * @return The bytes for uniformTypeIdentifier.
       */
      public com.google.protobuf.ByteString
          getUniformTypeIdentifierBytes() {
        java.lang.Object ref = uniformTypeIdentifier_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniformTypeIdentifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!payload_.isEmpty()) {
          output.writeBytes(1, payload_);
        }
        if (timestamp_ != 0D) {
          output.writeDouble(2, timestamp_);
        }
        if (!getNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
        }
        if (!getUniformTypeIdentifierBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, uniformTypeIdentifier_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!payload_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, payload_);
        }
        if (timestamp_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, timestamp_);
        }
        if (!getNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
        }
        if (!getUniformTypeIdentifierBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, uniformTypeIdentifier_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof idb.XctestRunResponse.TestRunInfo.TestAttachment)) {
          return super.equals(obj);
        }
        idb.XctestRunResponse.TestRunInfo.TestAttachment other = (idb.XctestRunResponse.TestRunInfo.TestAttachment) obj;

        if (!getPayload()
            .equals(other.getPayload())) return false;
        if (java.lang.Double.doubleToLongBits(getTimestamp())
            != java.lang.Double.doubleToLongBits(
                other.getTimestamp())) return false;
        if (!getName()
            .equals(other.getName())) return false;
        if (!getUniformTypeIdentifier()
            .equals(other.getUniformTypeIdentifier())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestamp()));
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + UNIFORM_TYPE_IDENTIFIER_FIELD_NUMBER;
        hash = (53 * hash) + getUniformTypeIdentifier().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestAttachment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(idb.XctestRunResponse.TestRunInfo.TestAttachment prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code idb.XctestRunResponse.TestRunInfo.TestAttachment}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:idb.XctestRunResponse.TestRunInfo.TestAttachment)
          idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestAttachment_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestAttachment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  idb.XctestRunResponse.TestRunInfo.TestAttachment.class, idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder.class);
        }

        // Construct using idb.XctestRunResponse.TestRunInfo.TestAttachment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          payload_ = com.google.protobuf.ByteString.EMPTY;

          timestamp_ = 0D;

          name_ = "";

          uniformTypeIdentifier_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestAttachment_descriptor;
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestAttachment getDefaultInstanceForType() {
          return idb.XctestRunResponse.TestRunInfo.TestAttachment.getDefaultInstance();
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestAttachment build() {
          idb.XctestRunResponse.TestRunInfo.TestAttachment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestAttachment buildPartial() {
          idb.XctestRunResponse.TestRunInfo.TestAttachment result = new idb.XctestRunResponse.TestRunInfo.TestAttachment(this);
          result.payload_ = payload_;
          result.timestamp_ = timestamp_;
          result.name_ = name_;
          result.uniformTypeIdentifier_ = uniformTypeIdentifier_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof idb.XctestRunResponse.TestRunInfo.TestAttachment) {
            return mergeFrom((idb.XctestRunResponse.TestRunInfo.TestAttachment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(idb.XctestRunResponse.TestRunInfo.TestAttachment other) {
          if (other == idb.XctestRunResponse.TestRunInfo.TestAttachment.getDefaultInstance()) return this;
          if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
            setPayload(other.getPayload());
          }
          if (other.getTimestamp() != 0D) {
            setTimestamp(other.getTimestamp());
          }
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (!other.getUniformTypeIdentifier().isEmpty()) {
            uniformTypeIdentifier_ = other.uniformTypeIdentifier_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          idb.XctestRunResponse.TestRunInfo.TestAttachment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (idb.XctestRunResponse.TestRunInfo.TestAttachment) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>bytes payload = 1;</code>
         * @return The payload.
         */
        public com.google.protobuf.ByteString getPayload() {
          return payload_;
        }
        /**
         * <code>bytes payload = 1;</code>
         * @param value The payload to set.
         * @return This builder for chaining.
         */
        public Builder setPayload(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          payload_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bytes payload = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPayload() {
          
          payload_ = getDefaultInstance().getPayload();
          onChanged();
          return this;
        }

        private double timestamp_ ;
        /**
         * <code>double timestamp = 2;</code>
         * @return The timestamp.
         */
        public double getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>double timestamp = 2;</code>
         * @param value The timestamp to set.
         * @return This builder for chaining.
         */
        public Builder setTimestamp(double value) {
          
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double timestamp = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimestamp() {
          
          timestamp_ = 0D;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>string name = 3;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string name = 3;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string name = 3;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string name = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>string name = 3;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object uniformTypeIdentifier_ = "";
        /**
         * <code>string uniform_type_identifier = 4;</code>
         * @return The uniformTypeIdentifier.
         */
        public java.lang.String getUniformTypeIdentifier() {
          java.lang.Object ref = uniformTypeIdentifier_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            uniformTypeIdentifier_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string uniform_type_identifier = 4;</code>
         * @return The bytes for uniformTypeIdentifier.
         */
        public com.google.protobuf.ByteString
            getUniformTypeIdentifierBytes() {
          java.lang.Object ref = uniformTypeIdentifier_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            uniformTypeIdentifier_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string uniform_type_identifier = 4;</code>
         * @param value The uniformTypeIdentifier to set.
         * @return This builder for chaining.
         */
        public Builder setUniformTypeIdentifier(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          uniformTypeIdentifier_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string uniform_type_identifier = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearUniformTypeIdentifier() {
          
          uniformTypeIdentifier_ = getDefaultInstance().getUniformTypeIdentifier();
          onChanged();
          return this;
        }
        /**
         * <code>string uniform_type_identifier = 4;</code>
         * @param value The bytes for uniformTypeIdentifier to set.
         * @return This builder for chaining.
         */
        public Builder setUniformTypeIdentifierBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          uniformTypeIdentifier_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:idb.XctestRunResponse.TestRunInfo.TestAttachment)
      }

      // @@protoc_insertion_point(class_scope:idb.XctestRunResponse.TestRunInfo.TestAttachment)
      private static final idb.XctestRunResponse.TestRunInfo.TestAttachment DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new idb.XctestRunResponse.TestRunInfo.TestAttachment();
      }

      public static idb.XctestRunResponse.TestRunInfo.TestAttachment getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TestAttachment>
          PARSER = new com.google.protobuf.AbstractParser<TestAttachment>() {
        @java.lang.Override
        public TestAttachment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestAttachment(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TestAttachment> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TestAttachment> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public idb.XctestRunResponse.TestRunInfo.TestAttachment getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TestActivityOrBuilder extends
        // @@protoc_insertion_point(interface_extends:idb.XctestRunResponse.TestRunInfo.TestActivity)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string title = 1;</code>
       * @return The title.
       */
      java.lang.String getTitle();
      /**
       * <code>string title = 1;</code>
       * @return The bytes for title.
       */
      com.google.protobuf.ByteString
          getTitleBytes();

      /**
       * <code>double duration = 2;</code>
       * @return The duration.
       */
      double getDuration();

      /**
       * <code>string uuid = 3;</code>
       * @return The uuid.
       */
      java.lang.String getUuid();
      /**
       * <code>string uuid = 3;</code>
       * @return The bytes for uuid.
       */
      com.google.protobuf.ByteString
          getUuidBytes();

      /**
       * <code>string activity_type = 4;</code>
       * @return The activityType.
       */
      java.lang.String getActivityType();
      /**
       * <code>string activity_type = 4;</code>
       * @return The bytes for activityType.
       */
      com.google.protobuf.ByteString
          getActivityTypeBytes();

      /**
       * <code>double start = 5;</code>
       * @return The start.
       */
      double getStart();

      /**
       * <code>double finish = 6;</code>
       * @return The finish.
       */
      double getFinish();

      /**
       * <code>string name = 7;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>string name = 7;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      java.util.List<idb.XctestRunResponse.TestRunInfo.TestAttachment> 
          getAttachmentsList();
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      idb.XctestRunResponse.TestRunInfo.TestAttachment getAttachments(int index);
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      int getAttachmentsCount();
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder> 
          getAttachmentsOrBuilderList();
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder getAttachmentsOrBuilder(
          int index);

      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> 
          getSubActivitiesList();
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      idb.XctestRunResponse.TestRunInfo.TestActivity getSubActivities(int index);
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      int getSubActivitiesCount();
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> 
          getSubActivitiesOrBuilderList();
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder getSubActivitiesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code idb.XctestRunResponse.TestRunInfo.TestActivity}
     */
    public  static final class TestActivity extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:idb.XctestRunResponse.TestRunInfo.TestActivity)
        TestActivityOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TestActivity.newBuilder() to construct.
      private TestActivity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TestActivity() {
        title_ = "";
        uuid_ = "";
        activityType_ = "";
        name_ = "";
        attachments_ = java.util.Collections.emptyList();
        subActivities_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TestActivity();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TestActivity(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                title_ = s;
                break;
              }
              case 17: {

                duration_ = input.readDouble();
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                uuid_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                activityType_ = s;
                break;
              }
              case 41: {

                start_ = input.readDouble();
                break;
              }
              case 49: {

                finish_ = input.readDouble();
                break;
              }
              case 58: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 66: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  attachments_ = new java.util.ArrayList<idb.XctestRunResponse.TestRunInfo.TestAttachment>();
                  mutable_bitField0_ |= 0x00000001;
                }
                attachments_.add(
                    input.readMessage(idb.XctestRunResponse.TestRunInfo.TestAttachment.parser(), extensionRegistry));
                break;
              }
              case 74: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  subActivities_ = new java.util.ArrayList<idb.XctestRunResponse.TestRunInfo.TestActivity>();
                  mutable_bitField0_ |= 0x00000002;
                }
                subActivities_.add(
                    input.readMessage(idb.XctestRunResponse.TestRunInfo.TestActivity.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            attachments_ = java.util.Collections.unmodifiableList(attachments_);
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            subActivities_ = java.util.Collections.unmodifiableList(subActivities_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestActivity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestActivity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idb.XctestRunResponse.TestRunInfo.TestActivity.class, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder.class);
      }

      public static final int TITLE_FIELD_NUMBER = 1;
      private volatile java.lang.Object title_;
      /**
       * <code>string title = 1;</code>
       * @return The title.
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        }
      }
      /**
       * <code>string title = 1;</code>
       * @return The bytes for title.
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DURATION_FIELD_NUMBER = 2;
      private double duration_;
      /**
       * <code>double duration = 2;</code>
       * @return The duration.
       */
      public double getDuration() {
        return duration_;
      }

      public static final int UUID_FIELD_NUMBER = 3;
      private volatile java.lang.Object uuid_;
      /**
       * <code>string uuid = 3;</code>
       * @return The uuid.
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uuid_ = s;
          return s;
        }
      }
      /**
       * <code>string uuid = 3;</code>
       * @return The bytes for uuid.
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ACTIVITY_TYPE_FIELD_NUMBER = 4;
      private volatile java.lang.Object activityType_;
      /**
       * <code>string activity_type = 4;</code>
       * @return The activityType.
       */
      public java.lang.String getActivityType() {
        java.lang.Object ref = activityType_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          activityType_ = s;
          return s;
        }
      }
      /**
       * <code>string activity_type = 4;</code>
       * @return The bytes for activityType.
       */
      public com.google.protobuf.ByteString
          getActivityTypeBytes() {
        java.lang.Object ref = activityType_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          activityType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int START_FIELD_NUMBER = 5;
      private double start_;
      /**
       * <code>double start = 5;</code>
       * @return The start.
       */
      public double getStart() {
        return start_;
      }

      public static final int FINISH_FIELD_NUMBER = 6;
      private double finish_;
      /**
       * <code>double finish = 6;</code>
       * @return The finish.
       */
      public double getFinish() {
        return finish_;
      }

      public static final int NAME_FIELD_NUMBER = 7;
      private volatile java.lang.Object name_;
      /**
       * <code>string name = 7;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>string name = 7;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ATTACHMENTS_FIELD_NUMBER = 8;
      private java.util.List<idb.XctestRunResponse.TestRunInfo.TestAttachment> attachments_;
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      public java.util.List<idb.XctestRunResponse.TestRunInfo.TestAttachment> getAttachmentsList() {
        return attachments_;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      public java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder> 
          getAttachmentsOrBuilderList() {
        return attachments_;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      public int getAttachmentsCount() {
        return attachments_.size();
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestAttachment getAttachments(int index) {
        return attachments_.get(index);
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder getAttachmentsOrBuilder(
          int index) {
        return attachments_.get(index);
      }

      public static final int SUB_ACTIVITIES_FIELD_NUMBER = 9;
      private java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> subActivities_;
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      public java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> getSubActivitiesList() {
        return subActivities_;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      public java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> 
          getSubActivitiesOrBuilderList() {
        return subActivities_;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      public int getSubActivitiesCount() {
        return subActivities_.size();
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestActivity getSubActivities(int index) {
        return subActivities_.get(index);
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder getSubActivitiesOrBuilder(
          int index) {
        return subActivities_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getTitleBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, title_);
        }
        if (duration_ != 0D) {
          output.writeDouble(2, duration_);
        }
        if (!getUuidBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uuid_);
        }
        if (!getActivityTypeBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, activityType_);
        }
        if (start_ != 0D) {
          output.writeDouble(5, start_);
        }
        if (finish_ != 0D) {
          output.writeDouble(6, finish_);
        }
        if (!getNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, name_);
        }
        for (int i = 0; i < attachments_.size(); i++) {
          output.writeMessage(8, attachments_.get(i));
        }
        for (int i = 0; i < subActivities_.size(); i++) {
          output.writeMessage(9, subActivities_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getTitleBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, title_);
        }
        if (duration_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, duration_);
        }
        if (!getUuidBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uuid_);
        }
        if (!getActivityTypeBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, activityType_);
        }
        if (start_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, start_);
        }
        if (finish_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, finish_);
        }
        if (!getNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, name_);
        }
        for (int i = 0; i < attachments_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, attachments_.get(i));
        }
        for (int i = 0; i < subActivities_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, subActivities_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof idb.XctestRunResponse.TestRunInfo.TestActivity)) {
          return super.equals(obj);
        }
        idb.XctestRunResponse.TestRunInfo.TestActivity other = (idb.XctestRunResponse.TestRunInfo.TestActivity) obj;

        if (!getTitle()
            .equals(other.getTitle())) return false;
        if (java.lang.Double.doubleToLongBits(getDuration())
            != java.lang.Double.doubleToLongBits(
                other.getDuration())) return false;
        if (!getUuid()
            .equals(other.getUuid())) return false;
        if (!getActivityType()
            .equals(other.getActivityType())) return false;
        if (java.lang.Double.doubleToLongBits(getStart())
            != java.lang.Double.doubleToLongBits(
                other.getStart())) return false;
        if (java.lang.Double.doubleToLongBits(getFinish())
            != java.lang.Double.doubleToLongBits(
                other.getFinish())) return false;
        if (!getName()
            .equals(other.getName())) return false;
        if (!getAttachmentsList()
            .equals(other.getAttachmentsList())) return false;
        if (!getSubActivitiesList()
            .equals(other.getSubActivitiesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TITLE_FIELD_NUMBER;
        hash = (53 * hash) + getTitle().hashCode();
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDuration()));
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
        hash = (37 * hash) + ACTIVITY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getActivityType().hashCode();
        hash = (37 * hash) + START_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getStart()));
        hash = (37 * hash) + FINISH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFinish()));
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        if (getAttachmentsCount() > 0) {
          hash = (37 * hash) + ATTACHMENTS_FIELD_NUMBER;
          hash = (53 * hash) + getAttachmentsList().hashCode();
        }
        if (getSubActivitiesCount() > 0) {
          hash = (37 * hash) + SUB_ACTIVITIES_FIELD_NUMBER;
          hash = (53 * hash) + getSubActivitiesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static idb.XctestRunResponse.TestRunInfo.TestActivity parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(idb.XctestRunResponse.TestRunInfo.TestActivity prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code idb.XctestRunResponse.TestRunInfo.TestActivity}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:idb.XctestRunResponse.TestRunInfo.TestActivity)
          idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestActivity_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestActivity_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  idb.XctestRunResponse.TestRunInfo.TestActivity.class, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder.class);
        }

        // Construct using idb.XctestRunResponse.TestRunInfo.TestActivity.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getAttachmentsFieldBuilder();
            getSubActivitiesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          title_ = "";

          duration_ = 0D;

          uuid_ = "";

          activityType_ = "";

          start_ = 0D;

          finish_ = 0D;

          name_ = "";

          if (attachmentsBuilder_ == null) {
            attachments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            attachmentsBuilder_.clear();
          }
          if (subActivitiesBuilder_ == null) {
            subActivities_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            subActivitiesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_TestActivity_descriptor;
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestActivity getDefaultInstanceForType() {
          return idb.XctestRunResponse.TestRunInfo.TestActivity.getDefaultInstance();
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestActivity build() {
          idb.XctestRunResponse.TestRunInfo.TestActivity result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public idb.XctestRunResponse.TestRunInfo.TestActivity buildPartial() {
          idb.XctestRunResponse.TestRunInfo.TestActivity result = new idb.XctestRunResponse.TestRunInfo.TestActivity(this);
          int from_bitField0_ = bitField0_;
          result.title_ = title_;
          result.duration_ = duration_;
          result.uuid_ = uuid_;
          result.activityType_ = activityType_;
          result.start_ = start_;
          result.finish_ = finish_;
          result.name_ = name_;
          if (attachmentsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              attachments_ = java.util.Collections.unmodifiableList(attachments_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.attachments_ = attachments_;
          } else {
            result.attachments_ = attachmentsBuilder_.build();
          }
          if (subActivitiesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              subActivities_ = java.util.Collections.unmodifiableList(subActivities_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.subActivities_ = subActivities_;
          } else {
            result.subActivities_ = subActivitiesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof idb.XctestRunResponse.TestRunInfo.TestActivity) {
            return mergeFrom((idb.XctestRunResponse.TestRunInfo.TestActivity)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(idb.XctestRunResponse.TestRunInfo.TestActivity other) {
          if (other == idb.XctestRunResponse.TestRunInfo.TestActivity.getDefaultInstance()) return this;
          if (!other.getTitle().isEmpty()) {
            title_ = other.title_;
            onChanged();
          }
          if (other.getDuration() != 0D) {
            setDuration(other.getDuration());
          }
          if (!other.getUuid().isEmpty()) {
            uuid_ = other.uuid_;
            onChanged();
          }
          if (!other.getActivityType().isEmpty()) {
            activityType_ = other.activityType_;
            onChanged();
          }
          if (other.getStart() != 0D) {
            setStart(other.getStart());
          }
          if (other.getFinish() != 0D) {
            setFinish(other.getFinish());
          }
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (attachmentsBuilder_ == null) {
            if (!other.attachments_.isEmpty()) {
              if (attachments_.isEmpty()) {
                attachments_ = other.attachments_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureAttachmentsIsMutable();
                attachments_.addAll(other.attachments_);
              }
              onChanged();
            }
          } else {
            if (!other.attachments_.isEmpty()) {
              if (attachmentsBuilder_.isEmpty()) {
                attachmentsBuilder_.dispose();
                attachmentsBuilder_ = null;
                attachments_ = other.attachments_;
                bitField0_ = (bitField0_ & ~0x00000001);
                attachmentsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getAttachmentsFieldBuilder() : null;
              } else {
                attachmentsBuilder_.addAllMessages(other.attachments_);
              }
            }
          }
          if (subActivitiesBuilder_ == null) {
            if (!other.subActivities_.isEmpty()) {
              if (subActivities_.isEmpty()) {
                subActivities_ = other.subActivities_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureSubActivitiesIsMutable();
                subActivities_.addAll(other.subActivities_);
              }
              onChanged();
            }
          } else {
            if (!other.subActivities_.isEmpty()) {
              if (subActivitiesBuilder_.isEmpty()) {
                subActivitiesBuilder_.dispose();
                subActivitiesBuilder_ = null;
                subActivities_ = other.subActivities_;
                bitField0_ = (bitField0_ & ~0x00000002);
                subActivitiesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSubActivitiesFieldBuilder() : null;
              } else {
                subActivitiesBuilder_.addAllMessages(other.subActivities_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          idb.XctestRunResponse.TestRunInfo.TestActivity parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (idb.XctestRunResponse.TestRunInfo.TestActivity) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object title_ = "";
        /**
         * <code>string title = 1;</code>
         * @return The title.
         */
        public java.lang.String getTitle() {
          java.lang.Object ref = title_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            title_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string title = 1;</code>
         * @return The bytes for title.
         */
        public com.google.protobuf.ByteString
            getTitleBytes() {
          java.lang.Object ref = title_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            title_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string title = 1;</code>
         * @param value The title to set.
         * @return This builder for chaining.
         */
        public Builder setTitle(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          title_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string title = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTitle() {
          
          title_ = getDefaultInstance().getTitle();
          onChanged();
          return this;
        }
        /**
         * <code>string title = 1;</code>
         * @param value The bytes for title to set.
         * @return This builder for chaining.
         */
        public Builder setTitleBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          title_ = value;
          onChanged();
          return this;
        }

        private double duration_ ;
        /**
         * <code>double duration = 2;</code>
         * @return The duration.
         */
        public double getDuration() {
          return duration_;
        }
        /**
         * <code>double duration = 2;</code>
         * @param value The duration to set.
         * @return This builder for chaining.
         */
        public Builder setDuration(double value) {
          
          duration_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double duration = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDuration() {
          
          duration_ = 0D;
          onChanged();
          return this;
        }

        private java.lang.Object uuid_ = "";
        /**
         * <code>string uuid = 3;</code>
         * @return The uuid.
         */
        public java.lang.String getUuid() {
          java.lang.Object ref = uuid_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            uuid_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string uuid = 3;</code>
         * @return The bytes for uuid.
         */
        public com.google.protobuf.ByteString
            getUuidBytes() {
          java.lang.Object ref = uuid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            uuid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string uuid = 3;</code>
         * @param value The uuid to set.
         * @return This builder for chaining.
         */
        public Builder setUuid(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          uuid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string uuid = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearUuid() {
          
          uuid_ = getDefaultInstance().getUuid();
          onChanged();
          return this;
        }
        /**
         * <code>string uuid = 3;</code>
         * @param value The bytes for uuid to set.
         * @return This builder for chaining.
         */
        public Builder setUuidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          uuid_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object activityType_ = "";
        /**
         * <code>string activity_type = 4;</code>
         * @return The activityType.
         */
        public java.lang.String getActivityType() {
          java.lang.Object ref = activityType_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            activityType_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string activity_type = 4;</code>
         * @return The bytes for activityType.
         */
        public com.google.protobuf.ByteString
            getActivityTypeBytes() {
          java.lang.Object ref = activityType_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            activityType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string activity_type = 4;</code>
         * @param value The activityType to set.
         * @return This builder for chaining.
         */
        public Builder setActivityType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          activityType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string activity_type = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearActivityType() {
          
          activityType_ = getDefaultInstance().getActivityType();
          onChanged();
          return this;
        }
        /**
         * <code>string activity_type = 4;</code>
         * @param value The bytes for activityType to set.
         * @return This builder for chaining.
         */
        public Builder setActivityTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          activityType_ = value;
          onChanged();
          return this;
        }

        private double start_ ;
        /**
         * <code>double start = 5;</code>
         * @return The start.
         */
        public double getStart() {
          return start_;
        }
        /**
         * <code>double start = 5;</code>
         * @param value The start to set.
         * @return This builder for chaining.
         */
        public Builder setStart(double value) {
          
          start_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double start = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearStart() {
          
          start_ = 0D;
          onChanged();
          return this;
        }

        private double finish_ ;
        /**
         * <code>double finish = 6;</code>
         * @return The finish.
         */
        public double getFinish() {
          return finish_;
        }
        /**
         * <code>double finish = 6;</code>
         * @param value The finish to set.
         * @return This builder for chaining.
         */
        public Builder setFinish(double value) {
          
          finish_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double finish = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearFinish() {
          
          finish_ = 0D;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>string name = 7;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string name = 7;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string name = 7;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string name = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>string name = 7;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private java.util.List<idb.XctestRunResponse.TestRunInfo.TestAttachment> attachments_ =
          java.util.Collections.emptyList();
        private void ensureAttachmentsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            attachments_ = new java.util.ArrayList<idb.XctestRunResponse.TestRunInfo.TestAttachment>(attachments_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            idb.XctestRunResponse.TestRunInfo.TestAttachment, idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder, idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder> attachmentsBuilder_;

        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public java.util.List<idb.XctestRunResponse.TestRunInfo.TestAttachment> getAttachmentsList() {
          if (attachmentsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(attachments_);
          } else {
            return attachmentsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public int getAttachmentsCount() {
          if (attachmentsBuilder_ == null) {
            return attachments_.size();
          } else {
            return attachmentsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestAttachment getAttachments(int index) {
          if (attachmentsBuilder_ == null) {
            return attachments_.get(index);
          } else {
            return attachmentsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder setAttachments(
            int index, idb.XctestRunResponse.TestRunInfo.TestAttachment value) {
          if (attachmentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttachmentsIsMutable();
            attachments_.set(index, value);
            onChanged();
          } else {
            attachmentsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder setAttachments(
            int index, idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder builderForValue) {
          if (attachmentsBuilder_ == null) {
            ensureAttachmentsIsMutable();
            attachments_.set(index, builderForValue.build());
            onChanged();
          } else {
            attachmentsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder addAttachments(idb.XctestRunResponse.TestRunInfo.TestAttachment value) {
          if (attachmentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttachmentsIsMutable();
            attachments_.add(value);
            onChanged();
          } else {
            attachmentsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder addAttachments(
            int index, idb.XctestRunResponse.TestRunInfo.TestAttachment value) {
          if (attachmentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttachmentsIsMutable();
            attachments_.add(index, value);
            onChanged();
          } else {
            attachmentsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder addAttachments(
            idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder builderForValue) {
          if (attachmentsBuilder_ == null) {
            ensureAttachmentsIsMutable();
            attachments_.add(builderForValue.build());
            onChanged();
          } else {
            attachmentsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder addAttachments(
            int index, idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder builderForValue) {
          if (attachmentsBuilder_ == null) {
            ensureAttachmentsIsMutable();
            attachments_.add(index, builderForValue.build());
            onChanged();
          } else {
            attachmentsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder addAllAttachments(
            java.lang.Iterable<? extends idb.XctestRunResponse.TestRunInfo.TestAttachment> values) {
          if (attachmentsBuilder_ == null) {
            ensureAttachmentsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, attachments_);
            onChanged();
          } else {
            attachmentsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder clearAttachments() {
          if (attachmentsBuilder_ == null) {
            attachments_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            attachmentsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public Builder removeAttachments(int index) {
          if (attachmentsBuilder_ == null) {
            ensureAttachmentsIsMutable();
            attachments_.remove(index);
            onChanged();
          } else {
            attachmentsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder getAttachmentsBuilder(
            int index) {
          return getAttachmentsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder getAttachmentsOrBuilder(
            int index) {
          if (attachmentsBuilder_ == null) {
            return attachments_.get(index);  } else {
            return attachmentsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder> 
             getAttachmentsOrBuilderList() {
          if (attachmentsBuilder_ != null) {
            return attachmentsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(attachments_);
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder addAttachmentsBuilder() {
          return getAttachmentsFieldBuilder().addBuilder(
              idb.XctestRunResponse.TestRunInfo.TestAttachment.getDefaultInstance());
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder addAttachmentsBuilder(
            int index) {
          return getAttachmentsFieldBuilder().addBuilder(
              index, idb.XctestRunResponse.TestRunInfo.TestAttachment.getDefaultInstance());
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestAttachment attachments = 8;</code>
         */
        public java.util.List<idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder> 
             getAttachmentsBuilderList() {
          return getAttachmentsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            idb.XctestRunResponse.TestRunInfo.TestAttachment, idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder, idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder> 
            getAttachmentsFieldBuilder() {
          if (attachmentsBuilder_ == null) {
            attachmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                idb.XctestRunResponse.TestRunInfo.TestAttachment, idb.XctestRunResponse.TestRunInfo.TestAttachment.Builder, idb.XctestRunResponse.TestRunInfo.TestAttachmentOrBuilder>(
                    attachments_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            attachments_ = null;
          }
          return attachmentsBuilder_;
        }

        private java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> subActivities_ =
          java.util.Collections.emptyList();
        private void ensureSubActivitiesIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            subActivities_ = new java.util.ArrayList<idb.XctestRunResponse.TestRunInfo.TestActivity>(subActivities_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            idb.XctestRunResponse.TestRunInfo.TestActivity, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder, idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> subActivitiesBuilder_;

        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> getSubActivitiesList() {
          if (subActivitiesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(subActivities_);
          } else {
            return subActivitiesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public int getSubActivitiesCount() {
          if (subActivitiesBuilder_ == null) {
            return subActivities_.size();
          } else {
            return subActivitiesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestActivity getSubActivities(int index) {
          if (subActivitiesBuilder_ == null) {
            return subActivities_.get(index);
          } else {
            return subActivitiesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder setSubActivities(
            int index, idb.XctestRunResponse.TestRunInfo.TestActivity value) {
          if (subActivitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubActivitiesIsMutable();
            subActivities_.set(index, value);
            onChanged();
          } else {
            subActivitiesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder setSubActivities(
            int index, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder builderForValue) {
          if (subActivitiesBuilder_ == null) {
            ensureSubActivitiesIsMutable();
            subActivities_.set(index, builderForValue.build());
            onChanged();
          } else {
            subActivitiesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder addSubActivities(idb.XctestRunResponse.TestRunInfo.TestActivity value) {
          if (subActivitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubActivitiesIsMutable();
            subActivities_.add(value);
            onChanged();
          } else {
            subActivitiesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder addSubActivities(
            int index, idb.XctestRunResponse.TestRunInfo.TestActivity value) {
          if (subActivitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubActivitiesIsMutable();
            subActivities_.add(index, value);
            onChanged();
          } else {
            subActivitiesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder addSubActivities(
            idb.XctestRunResponse.TestRunInfo.TestActivity.Builder builderForValue) {
          if (subActivitiesBuilder_ == null) {
            ensureSubActivitiesIsMutable();
            subActivities_.add(builderForValue.build());
            onChanged();
          } else {
            subActivitiesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder addSubActivities(
            int index, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder builderForValue) {
          if (subActivitiesBuilder_ == null) {
            ensureSubActivitiesIsMutable();
            subActivities_.add(index, builderForValue.build());
            onChanged();
          } else {
            subActivitiesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder addAllSubActivities(
            java.lang.Iterable<? extends idb.XctestRunResponse.TestRunInfo.TestActivity> values) {
          if (subActivitiesBuilder_ == null) {
            ensureSubActivitiesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, subActivities_);
            onChanged();
          } else {
            subActivitiesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder clearSubActivities() {
          if (subActivitiesBuilder_ == null) {
            subActivities_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            subActivitiesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public Builder removeSubActivities(int index) {
          if (subActivitiesBuilder_ == null) {
            ensureSubActivitiesIsMutable();
            subActivities_.remove(index);
            onChanged();
          } else {
            subActivitiesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestActivity.Builder getSubActivitiesBuilder(
            int index) {
          return getSubActivitiesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder getSubActivitiesOrBuilder(
            int index) {
          if (subActivitiesBuilder_ == null) {
            return subActivities_.get(index);  } else {
            return subActivitiesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> 
             getSubActivitiesOrBuilderList() {
          if (subActivitiesBuilder_ != null) {
            return subActivitiesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(subActivities_);
          }
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestActivity.Builder addSubActivitiesBuilder() {
          return getSubActivitiesFieldBuilder().addBuilder(
              idb.XctestRunResponse.TestRunInfo.TestActivity.getDefaultInstance());
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public idb.XctestRunResponse.TestRunInfo.TestActivity.Builder addSubActivitiesBuilder(
            int index) {
          return getSubActivitiesFieldBuilder().addBuilder(
              index, idb.XctestRunResponse.TestRunInfo.TestActivity.getDefaultInstance());
        }
        /**
         * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity sub_activities = 9;</code>
         */
        public java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity.Builder> 
             getSubActivitiesBuilderList() {
          return getSubActivitiesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            idb.XctestRunResponse.TestRunInfo.TestActivity, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder, idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> 
            getSubActivitiesFieldBuilder() {
          if (subActivitiesBuilder_ == null) {
            subActivitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                idb.XctestRunResponse.TestRunInfo.TestActivity, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder, idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder>(
                    subActivities_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            subActivities_ = null;
          }
          return subActivitiesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:idb.XctestRunResponse.TestRunInfo.TestActivity)
      }

      // @@protoc_insertion_point(class_scope:idb.XctestRunResponse.TestRunInfo.TestActivity)
      private static final idb.XctestRunResponse.TestRunInfo.TestActivity DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new idb.XctestRunResponse.TestRunInfo.TestActivity();
      }

      public static idb.XctestRunResponse.TestRunInfo.TestActivity getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TestActivity>
          PARSER = new com.google.protobuf.AbstractParser<TestActivity>() {
        @java.lang.Override
        public TestActivity parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TestActivity(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TestActivity> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TestActivity> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public idb.XctestRunResponse.TestRunInfo.TestActivity getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
     * @return The enum numeric value on the wire for status.
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
     * @return The status.
     */
    public idb.XctestRunResponse.TestRunInfo.Status getStatus() {
      @SuppressWarnings("deprecation")
      idb.XctestRunResponse.TestRunInfo.Status result = idb.XctestRunResponse.TestRunInfo.Status.valueOf(status_);
      return result == null ? idb.XctestRunResponse.TestRunInfo.Status.UNRECOGNIZED : result;
    }

    public static final int BUNDLE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object bundleName_;
    /**
     * <code>string bundle_name = 2;</code>
     * @return The bundleName.
     */
    public java.lang.String getBundleName() {
      java.lang.Object ref = bundleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bundleName_ = s;
        return s;
      }
    }
    /**
     * <code>string bundle_name = 2;</code>
     * @return The bytes for bundleName.
     */
    public com.google.protobuf.ByteString
        getBundleNameBytes() {
      java.lang.Object ref = bundleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bundleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLASS_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object className_;
    /**
     * <code>string class_name = 3;</code>
     * @return The className.
     */
    public java.lang.String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        className_ = s;
        return s;
      }
    }
    /**
     * <code>string class_name = 3;</code>
     * @return The bytes for className.
     */
    public com.google.protobuf.ByteString
        getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METHOD_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object methodName_;
    /**
     * <code>string method_name = 4;</code>
     * @return The methodName.
     */
    public java.lang.String getMethodName() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        methodName_ = s;
        return s;
      }
    }
    /**
     * <code>string method_name = 4;</code>
     * @return The bytes for methodName.
     */
    public com.google.protobuf.ByteString
        getMethodNameBytes() {
      java.lang.Object ref = methodName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DURATION_FIELD_NUMBER = 5;
    private double duration_;
    /**
     * <code>double duration = 5;</code>
     * @return The duration.
     */
    public double getDuration() {
      return duration_;
    }

    public static final int FAILURE_INFO_FIELD_NUMBER = 6;
    private idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failureInfo_;
    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
     * @return Whether the failureInfo field is set.
     */
    public boolean hasFailureInfo() {
      return failureInfo_ != null;
    }
    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
     * @return The failureInfo.
     */
    public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo getFailureInfo() {
      return failureInfo_ == null ? idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.getDefaultInstance() : failureInfo_;
    }
    /**
     * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
     */
    public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfoOrBuilder getFailureInfoOrBuilder() {
      return getFailureInfo();
    }

    public static final int LOGS_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList logs_;
    /**
     * <code>repeated string logs = 7;</code>
     * @return A list containing the logs.
     */
    public com.google.protobuf.ProtocolStringList
        getLogsList() {
      return logs_;
    }
    /**
     * <code>repeated string logs = 7;</code>
     * @return The count of logs.
     */
    public int getLogsCount() {
      return logs_.size();
    }
    /**
     * <code>repeated string logs = 7;</code>
     * @param index The index of the element to return.
     * @return The logs at the given index.
     */
    public java.lang.String getLogs(int index) {
      return logs_.get(index);
    }
    /**
     * <code>repeated string logs = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the logs at the given index.
     */
    public com.google.protobuf.ByteString
        getLogsBytes(int index) {
      return logs_.getByteString(index);
    }

    public static final int ACTIVITYLOGS_FIELD_NUMBER = 8;
    private java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> activityLogs_;
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    public java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> getActivityLogsList() {
      return activityLogs_;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    public java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> 
        getActivityLogsOrBuilderList() {
      return activityLogs_;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    public int getActivityLogsCount() {
      return activityLogs_.size();
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    public idb.XctestRunResponse.TestRunInfo.TestActivity getActivityLogs(int index) {
      return activityLogs_.get(index);
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
     */
    public idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder getActivityLogsOrBuilder(
        int index) {
      return activityLogs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != idb.XctestRunResponse.TestRunInfo.Status.PASSED.getNumber()) {
        output.writeEnum(1, status_);
      }
      if (!getBundleNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, bundleName_);
      }
      if (!getClassNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, className_);
      }
      if (!getMethodNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, methodName_);
      }
      if (duration_ != 0D) {
        output.writeDouble(5, duration_);
      }
      if (failureInfo_ != null) {
        output.writeMessage(6, getFailureInfo());
      }
      for (int i = 0; i < logs_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, logs_.getRaw(i));
      }
      for (int i = 0; i < activityLogs_.size(); i++) {
        output.writeMessage(8, activityLogs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != idb.XctestRunResponse.TestRunInfo.Status.PASSED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_);
      }
      if (!getBundleNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, bundleName_);
      }
      if (!getClassNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, className_);
      }
      if (!getMethodNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, methodName_);
      }
      if (duration_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, duration_);
      }
      if (failureInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getFailureInfo());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < logs_.size(); i++) {
          dataSize += computeStringSizeNoTag(logs_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getLogsList().size();
      }
      for (int i = 0; i < activityLogs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, activityLogs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idb.XctestRunResponse.TestRunInfo)) {
        return super.equals(obj);
      }
      idb.XctestRunResponse.TestRunInfo other = (idb.XctestRunResponse.TestRunInfo) obj;

      if (status_ != other.status_) return false;
      if (!getBundleName()
          .equals(other.getBundleName())) return false;
      if (!getClassName()
          .equals(other.getClassName())) return false;
      if (!getMethodName()
          .equals(other.getMethodName())) return false;
      if (java.lang.Double.doubleToLongBits(getDuration())
          != java.lang.Double.doubleToLongBits(
              other.getDuration())) return false;
      if (hasFailureInfo() != other.hasFailureInfo()) return false;
      if (hasFailureInfo()) {
        if (!getFailureInfo()
            .equals(other.getFailureInfo())) return false;
      }
      if (!getLogsList()
          .equals(other.getLogsList())) return false;
      if (!getActivityLogsList()
          .equals(other.getActivityLogsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + BUNDLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getBundleName().hashCode();
      hash = (37 * hash) + CLASS_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getClassName().hashCode();
      hash = (37 * hash) + METHOD_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getMethodName().hashCode();
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDuration()));
      if (hasFailureInfo()) {
        hash = (37 * hash) + FAILURE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getFailureInfo().hashCode();
      }
      if (getLogsCount() > 0) {
        hash = (37 * hash) + LOGS_FIELD_NUMBER;
        hash = (53 * hash) + getLogsList().hashCode();
      }
      if (getActivityLogsCount() > 0) {
        hash = (37 * hash) + ACTIVITYLOGS_FIELD_NUMBER;
        hash = (53 * hash) + getActivityLogsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idb.XctestRunResponse.TestRunInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idb.XctestRunResponse.TestRunInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idb.XctestRunResponse.TestRunInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idb.XctestRunResponse.TestRunInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idb.XctestRunResponse.TestRunInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idb.XctestRunResponse.TestRunInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idb.XctestRunResponse.TestRunInfo)
        idb.XctestRunResponse.TestRunInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idb.XctestRunResponse.TestRunInfo.class, idb.XctestRunResponse.TestRunInfo.Builder.class);
      }

      // Construct using idb.XctestRunResponse.TestRunInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getActivityLogsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        status_ = 0;

        bundleName_ = "";

        className_ = "";

        methodName_ = "";

        duration_ = 0D;

        if (failureInfoBuilder_ == null) {
          failureInfo_ = null;
        } else {
          failureInfo_ = null;
          failureInfoBuilder_ = null;
        }
        logs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (activityLogsBuilder_ == null) {
          activityLogs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          activityLogsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idb.Idb.internal_static_idb_XctestRunResponse_TestRunInfo_descriptor;
      }

      @java.lang.Override
      public idb.XctestRunResponse.TestRunInfo getDefaultInstanceForType() {
        return idb.XctestRunResponse.TestRunInfo.getDefaultInstance();
      }

      @java.lang.Override
      public idb.XctestRunResponse.TestRunInfo build() {
        idb.XctestRunResponse.TestRunInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public idb.XctestRunResponse.TestRunInfo buildPartial() {
        idb.XctestRunResponse.TestRunInfo result = new idb.XctestRunResponse.TestRunInfo(this);
        int from_bitField0_ = bitField0_;
        result.status_ = status_;
        result.bundleName_ = bundleName_;
        result.className_ = className_;
        result.methodName_ = methodName_;
        result.duration_ = duration_;
        if (failureInfoBuilder_ == null) {
          result.failureInfo_ = failureInfo_;
        } else {
          result.failureInfo_ = failureInfoBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          logs_ = logs_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.logs_ = logs_;
        if (activityLogsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            activityLogs_ = java.util.Collections.unmodifiableList(activityLogs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.activityLogs_ = activityLogs_;
        } else {
          result.activityLogs_ = activityLogsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idb.XctestRunResponse.TestRunInfo) {
          return mergeFrom((idb.XctestRunResponse.TestRunInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idb.XctestRunResponse.TestRunInfo other) {
        if (other == idb.XctestRunResponse.TestRunInfo.getDefaultInstance()) return this;
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (!other.getBundleName().isEmpty()) {
          bundleName_ = other.bundleName_;
          onChanged();
        }
        if (!other.getClassName().isEmpty()) {
          className_ = other.className_;
          onChanged();
        }
        if (!other.getMethodName().isEmpty()) {
          methodName_ = other.methodName_;
          onChanged();
        }
        if (other.getDuration() != 0D) {
          setDuration(other.getDuration());
        }
        if (other.hasFailureInfo()) {
          mergeFailureInfo(other.getFailureInfo());
        }
        if (!other.logs_.isEmpty()) {
          if (logs_.isEmpty()) {
            logs_ = other.logs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLogsIsMutable();
            logs_.addAll(other.logs_);
          }
          onChanged();
        }
        if (activityLogsBuilder_ == null) {
          if (!other.activityLogs_.isEmpty()) {
            if (activityLogs_.isEmpty()) {
              activityLogs_ = other.activityLogs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureActivityLogsIsMutable();
              activityLogs_.addAll(other.activityLogs_);
            }
            onChanged();
          }
        } else {
          if (!other.activityLogs_.isEmpty()) {
            if (activityLogsBuilder_.isEmpty()) {
              activityLogsBuilder_.dispose();
              activityLogsBuilder_ = null;
              activityLogs_ = other.activityLogs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              activityLogsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getActivityLogsFieldBuilder() : null;
            } else {
              activityLogsBuilder_.addAllMessages(other.activityLogs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idb.XctestRunResponse.TestRunInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idb.XctestRunResponse.TestRunInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int status_ = 0;
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
       * @return The enum numeric value on the wire for status.
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
       * @return The status.
       */
      public idb.XctestRunResponse.TestRunInfo.Status getStatus() {
        @SuppressWarnings("deprecation")
        idb.XctestRunResponse.TestRunInfo.Status result = idb.XctestRunResponse.TestRunInfo.Status.valueOf(status_);
        return result == null ? idb.XctestRunResponse.TestRunInfo.Status.UNRECOGNIZED : result;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(idb.XctestRunResponse.TestRunInfo.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.Status status = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object bundleName_ = "";
      /**
       * <code>string bundle_name = 2;</code>
       * @return The bundleName.
       */
      public java.lang.String getBundleName() {
        java.lang.Object ref = bundleName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bundleName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string bundle_name = 2;</code>
       * @return The bytes for bundleName.
       */
      public com.google.protobuf.ByteString
          getBundleNameBytes() {
        java.lang.Object ref = bundleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bundleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string bundle_name = 2;</code>
       * @param value The bundleName to set.
       * @return This builder for chaining.
       */
      public Builder setBundleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bundleName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string bundle_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBundleName() {
        
        bundleName_ = getDefaultInstance().getBundleName();
        onChanged();
        return this;
      }
      /**
       * <code>string bundle_name = 2;</code>
       * @param value The bytes for bundleName to set.
       * @return This builder for chaining.
       */
      public Builder setBundleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bundleName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object className_ = "";
      /**
       * <code>string class_name = 3;</code>
       * @return The className.
       */
      public java.lang.String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          className_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string class_name = 3;</code>
       * @return The bytes for className.
       */
      public com.google.protobuf.ByteString
          getClassNameBytes() {
        java.lang.Object ref = className_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          className_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string class_name = 3;</code>
       * @param value The className to set.
       * @return This builder for chaining.
       */
      public Builder setClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        className_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string class_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearClassName() {
        
        className_ = getDefaultInstance().getClassName();
        onChanged();
        return this;
      }
      /**
       * <code>string class_name = 3;</code>
       * @param value The bytes for className to set.
       * @return This builder for chaining.
       */
      public Builder setClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        className_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object methodName_ = "";
      /**
       * <code>string method_name = 4;</code>
       * @return The methodName.
       */
      public java.lang.String getMethodName() {
        java.lang.Object ref = methodName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          methodName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string method_name = 4;</code>
       * @return The bytes for methodName.
       */
      public com.google.protobuf.ByteString
          getMethodNameBytes() {
        java.lang.Object ref = methodName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          methodName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string method_name = 4;</code>
       * @param value The methodName to set.
       * @return This builder for chaining.
       */
      public Builder setMethodName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        methodName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string method_name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethodName() {
        
        methodName_ = getDefaultInstance().getMethodName();
        onChanged();
        return this;
      }
      /**
       * <code>string method_name = 4;</code>
       * @param value The bytes for methodName to set.
       * @return This builder for chaining.
       */
      public Builder setMethodNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        methodName_ = value;
        onChanged();
        return this;
      }

      private double duration_ ;
      /**
       * <code>double duration = 5;</code>
       * @return The duration.
       */
      public double getDuration() {
        return duration_;
      }
      /**
       * <code>double duration = 5;</code>
       * @param value The duration to set.
       * @return This builder for chaining.
       */
      public Builder setDuration(double value) {
        
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double duration = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuration() {
        
        duration_ = 0D;
        onChanged();
        return this;
      }

      private idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failureInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo, idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.Builder, idb.XctestRunResponse.TestRunInfo.TestRunFailureInfoOrBuilder> failureInfoBuilder_;
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       * @return Whether the failureInfo field is set.
       */
      public boolean hasFailureInfo() {
        return failureInfoBuilder_ != null || failureInfo_ != null;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       * @return The failureInfo.
       */
      public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo getFailureInfo() {
        if (failureInfoBuilder_ == null) {
          return failureInfo_ == null ? idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.getDefaultInstance() : failureInfo_;
        } else {
          return failureInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       */
      public Builder setFailureInfo(idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo value) {
        if (failureInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          failureInfo_ = value;
          onChanged();
        } else {
          failureInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       */
      public Builder setFailureInfo(
          idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.Builder builderForValue) {
        if (failureInfoBuilder_ == null) {
          failureInfo_ = builderForValue.build();
          onChanged();
        } else {
          failureInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       */
      public Builder mergeFailureInfo(idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo value) {
        if (failureInfoBuilder_ == null) {
          if (failureInfo_ != null) {
            failureInfo_ =
              idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.newBuilder(failureInfo_).mergeFrom(value).buildPartial();
          } else {
            failureInfo_ = value;
          }
          onChanged();
        } else {
          failureInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       */
      public Builder clearFailureInfo() {
        if (failureInfoBuilder_ == null) {
          failureInfo_ = null;
          onChanged();
        } else {
          failureInfo_ = null;
          failureInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.Builder getFailureInfoBuilder() {
        
        onChanged();
        return getFailureInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestRunFailureInfoOrBuilder getFailureInfoOrBuilder() {
        if (failureInfoBuilder_ != null) {
          return failureInfoBuilder_.getMessageOrBuilder();
        } else {
          return failureInfo_ == null ?
              idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.getDefaultInstance() : failureInfo_;
        }
      }
      /**
       * <code>.idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo failure_info = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo, idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.Builder, idb.XctestRunResponse.TestRunInfo.TestRunFailureInfoOrBuilder> 
          getFailureInfoFieldBuilder() {
        if (failureInfoBuilder_ == null) {
          failureInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo, idb.XctestRunResponse.TestRunInfo.TestRunFailureInfo.Builder, idb.XctestRunResponse.TestRunInfo.TestRunFailureInfoOrBuilder>(
                  getFailureInfo(),
                  getParentForChildren(),
                  isClean());
          failureInfo_ = null;
        }
        return failureInfoBuilder_;
      }

      private com.google.protobuf.LazyStringList logs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureLogsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          logs_ = new com.google.protobuf.LazyStringArrayList(logs_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @return A list containing the logs.
       */
      public com.google.protobuf.ProtocolStringList
          getLogsList() {
        return logs_.getUnmodifiableView();
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @return The count of logs.
       */
      public int getLogsCount() {
        return logs_.size();
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @param index The index of the element to return.
       * @return The logs at the given index.
       */
      public java.lang.String getLogs(int index) {
        return logs_.get(index);
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @param index The index of the value to return.
       * @return The bytes of the logs at the given index.
       */
      public com.google.protobuf.ByteString
          getLogsBytes(int index) {
        return logs_.getByteString(index);
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @param index The index to set the value at.
       * @param value The logs to set.
       * @return This builder for chaining.
       */
      public Builder setLogs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLogsIsMutable();
        logs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @param value The logs to add.
       * @return This builder for chaining.
       */
      public Builder addLogs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLogsIsMutable();
        logs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @param values The logs to add.
       * @return This builder for chaining.
       */
      public Builder addAllLogs(
          java.lang.Iterable<java.lang.String> values) {
        ensureLogsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, logs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogs() {
        logs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string logs = 7;</code>
       * @param value The bytes of the logs to add.
       * @return This builder for chaining.
       */
      public Builder addLogsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureLogsIsMutable();
        logs_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> activityLogs_ =
        java.util.Collections.emptyList();
      private void ensureActivityLogsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          activityLogs_ = new java.util.ArrayList<idb.XctestRunResponse.TestRunInfo.TestActivity>(activityLogs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          idb.XctestRunResponse.TestRunInfo.TestActivity, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder, idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> activityLogsBuilder_;

      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity> getActivityLogsList() {
        if (activityLogsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(activityLogs_);
        } else {
          return activityLogsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public int getActivityLogsCount() {
        if (activityLogsBuilder_ == null) {
          return activityLogs_.size();
        } else {
          return activityLogsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestActivity getActivityLogs(int index) {
        if (activityLogsBuilder_ == null) {
          return activityLogs_.get(index);
        } else {
          return activityLogsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder setActivityLogs(
          int index, idb.XctestRunResponse.TestRunInfo.TestActivity value) {
        if (activityLogsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityLogsIsMutable();
          activityLogs_.set(index, value);
          onChanged();
        } else {
          activityLogsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder setActivityLogs(
          int index, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder builderForValue) {
        if (activityLogsBuilder_ == null) {
          ensureActivityLogsIsMutable();
          activityLogs_.set(index, builderForValue.build());
          onChanged();
        } else {
          activityLogsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder addActivityLogs(idb.XctestRunResponse.TestRunInfo.TestActivity value) {
        if (activityLogsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityLogsIsMutable();
          activityLogs_.add(value);
          onChanged();
        } else {
          activityLogsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder addActivityLogs(
          int index, idb.XctestRunResponse.TestRunInfo.TestActivity value) {
        if (activityLogsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActivityLogsIsMutable();
          activityLogs_.add(index, value);
          onChanged();
        } else {
          activityLogsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder addActivityLogs(
          idb.XctestRunResponse.TestRunInfo.TestActivity.Builder builderForValue) {
        if (activityLogsBuilder_ == null) {
          ensureActivityLogsIsMutable();
          activityLogs_.add(builderForValue.build());
          onChanged();
        } else {
          activityLogsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder addActivityLogs(
          int index, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder builderForValue) {
        if (activityLogsBuilder_ == null) {
          ensureActivityLogsIsMutable();
          activityLogs_.add(index, builderForValue.build());
          onChanged();
        } else {
          activityLogsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder addAllActivityLogs(
          java.lang.Iterable<? extends idb.XctestRunResponse.TestRunInfo.TestActivity> values) {
        if (activityLogsBuilder_ == null) {
          ensureActivityLogsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, activityLogs_);
          onChanged();
        } else {
          activityLogsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder clearActivityLogs() {
        if (activityLogsBuilder_ == null) {
          activityLogs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          activityLogsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public Builder removeActivityLogs(int index) {
        if (activityLogsBuilder_ == null) {
          ensureActivityLogsIsMutable();
          activityLogs_.remove(index);
          onChanged();
        } else {
          activityLogsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestActivity.Builder getActivityLogsBuilder(
          int index) {
        return getActivityLogsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder getActivityLogsOrBuilder(
          int index) {
        if (activityLogsBuilder_ == null) {
          return activityLogs_.get(index);  } else {
          return activityLogsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public java.util.List<? extends idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> 
           getActivityLogsOrBuilderList() {
        if (activityLogsBuilder_ != null) {
          return activityLogsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(activityLogs_);
        }
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestActivity.Builder addActivityLogsBuilder() {
        return getActivityLogsFieldBuilder().addBuilder(
            idb.XctestRunResponse.TestRunInfo.TestActivity.getDefaultInstance());
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public idb.XctestRunResponse.TestRunInfo.TestActivity.Builder addActivityLogsBuilder(
          int index) {
        return getActivityLogsFieldBuilder().addBuilder(
            index, idb.XctestRunResponse.TestRunInfo.TestActivity.getDefaultInstance());
      }
      /**
       * <code>repeated .idb.XctestRunResponse.TestRunInfo.TestActivity activityLogs = 8;</code>
       */
      public java.util.List<idb.XctestRunResponse.TestRunInfo.TestActivity.Builder> 
           getActivityLogsBuilderList() {
        return getActivityLogsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          idb.XctestRunResponse.TestRunInfo.TestActivity, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder, idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder> 
          getActivityLogsFieldBuilder() {
        if (activityLogsBuilder_ == null) {
          activityLogsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              idb.XctestRunResponse.TestRunInfo.TestActivity, idb.XctestRunResponse.TestRunInfo.TestActivity.Builder, idb.XctestRunResponse.TestRunInfo.TestActivityOrBuilder>(
                  activityLogs_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          activityLogs_ = null;
        }
        return activityLogsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idb.XctestRunResponse.TestRunInfo)
    }

    // @@protoc_insertion_point(class_scope:idb.XctestRunResponse.TestRunInfo)
    private static final idb.XctestRunResponse.TestRunInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idb.XctestRunResponse.TestRunInfo();
    }

    public static idb.XctestRunResponse.TestRunInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestRunInfo>
        PARSER = new com.google.protobuf.AbstractParser<TestRunInfo>() {
      @java.lang.Override
      public TestRunInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestRunInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestRunInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestRunInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public idb.XctestRunResponse.TestRunInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int STATUS_FIELD_NUMBER = 1;
  private int status_;
  /**
   * <code>.idb.XctestRunResponse.Status status = 1;</code>
   * @return The enum numeric value on the wire for status.
   */
  public int getStatusValue() {
    return status_;
  }
  /**
   * <code>.idb.XctestRunResponse.Status status = 1;</code>
   * @return The status.
   */
  public idb.XctestRunResponse.Status getStatus() {
    @SuppressWarnings("deprecation")
    idb.XctestRunResponse.Status result = idb.XctestRunResponse.Status.valueOf(status_);
    return result == null ? idb.XctestRunResponse.Status.UNRECOGNIZED : result;
  }

  public static final int RESULTS_FIELD_NUMBER = 2;
  private java.util.List<idb.XctestRunResponse.TestRunInfo> results_;
  /**
   * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
   */
  public java.util.List<idb.XctestRunResponse.TestRunInfo> getResultsList() {
    return results_;
  }
  /**
   * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
   */
  public java.util.List<? extends idb.XctestRunResponse.TestRunInfoOrBuilder> 
      getResultsOrBuilderList() {
    return results_;
  }
  /**
   * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
   */
  public int getResultsCount() {
    return results_.size();
  }
  /**
   * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
   */
  public idb.XctestRunResponse.TestRunInfo getResults(int index) {
    return results_.get(index);
  }
  /**
   * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
   */
  public idb.XctestRunResponse.TestRunInfoOrBuilder getResultsOrBuilder(
      int index) {
    return results_.get(index);
  }

  public static final int LOG_OUTPUT_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList logOutput_;
  /**
   * <code>repeated string log_output = 3;</code>
   * @return A list containing the logOutput.
   */
  public com.google.protobuf.ProtocolStringList
      getLogOutputList() {
    return logOutput_;
  }
  /**
   * <code>repeated string log_output = 3;</code>
   * @return The count of logOutput.
   */
  public int getLogOutputCount() {
    return logOutput_.size();
  }
  /**
   * <code>repeated string log_output = 3;</code>
   * @param index The index of the element to return.
   * @return The logOutput at the given index.
   */
  public java.lang.String getLogOutput(int index) {
    return logOutput_.get(index);
  }
  /**
   * <code>repeated string log_output = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the logOutput at the given index.
   */
  public com.google.protobuf.ByteString
      getLogOutputBytes(int index) {
    return logOutput_.getByteString(index);
  }

  public static final int RESULT_BUNDLE_FIELD_NUMBER = 4;
  private idb.Payload resultBundle_;
  /**
   * <code>.idb.Payload result_bundle = 4;</code>
   * @return Whether the resultBundle field is set.
   */
  public boolean hasResultBundle() {
    return resultBundle_ != null;
  }
  /**
   * <code>.idb.Payload result_bundle = 4;</code>
   * @return The resultBundle.
   */
  public idb.Payload getResultBundle() {
    return resultBundle_ == null ? idb.Payload.getDefaultInstance() : resultBundle_;
  }
  /**
   * <code>.idb.Payload result_bundle = 4;</code>
   */
  public idb.PayloadOrBuilder getResultBundleOrBuilder() {
    return getResultBundle();
  }

  public static final int COVERAGE_JSON_FIELD_NUMBER = 5;
  private volatile java.lang.Object coverageJson_;
  /**
   * <code>string coverage_json = 5;</code>
   * @return The coverageJson.
   */
  public java.lang.String getCoverageJson() {
    java.lang.Object ref = coverageJson_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      coverageJson_ = s;
      return s;
    }
  }
  /**
   * <code>string coverage_json = 5;</code>
   * @return The bytes for coverageJson.
   */
  public com.google.protobuf.ByteString
      getCoverageJsonBytes() {
    java.lang.Object ref = coverageJson_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      coverageJson_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (status_ != idb.XctestRunResponse.Status.RUNNING.getNumber()) {
      output.writeEnum(1, status_);
    }
    for (int i = 0; i < results_.size(); i++) {
      output.writeMessage(2, results_.get(i));
    }
    for (int i = 0; i < logOutput_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, logOutput_.getRaw(i));
    }
    if (resultBundle_ != null) {
      output.writeMessage(4, getResultBundle());
    }
    if (!getCoverageJsonBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, coverageJson_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (status_ != idb.XctestRunResponse.Status.RUNNING.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, status_);
    }
    for (int i = 0; i < results_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, results_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < logOutput_.size(); i++) {
        dataSize += computeStringSizeNoTag(logOutput_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getLogOutputList().size();
    }
    if (resultBundle_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getResultBundle());
    }
    if (!getCoverageJsonBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, coverageJson_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof idb.XctestRunResponse)) {
      return super.equals(obj);
    }
    idb.XctestRunResponse other = (idb.XctestRunResponse) obj;

    if (status_ != other.status_) return false;
    if (!getResultsList()
        .equals(other.getResultsList())) return false;
    if (!getLogOutputList()
        .equals(other.getLogOutputList())) return false;
    if (hasResultBundle() != other.hasResultBundle()) return false;
    if (hasResultBundle()) {
      if (!getResultBundle()
          .equals(other.getResultBundle())) return false;
    }
    if (!getCoverageJson()
        .equals(other.getCoverageJson())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    if (getResultsCount() > 0) {
      hash = (37 * hash) + RESULTS_FIELD_NUMBER;
      hash = (53 * hash) + getResultsList().hashCode();
    }
    if (getLogOutputCount() > 0) {
      hash = (37 * hash) + LOG_OUTPUT_FIELD_NUMBER;
      hash = (53 * hash) + getLogOutputList().hashCode();
    }
    if (hasResultBundle()) {
      hash = (37 * hash) + RESULT_BUNDLE_FIELD_NUMBER;
      hash = (53 * hash) + getResultBundle().hashCode();
    }
    hash = (37 * hash) + COVERAGE_JSON_FIELD_NUMBER;
    hash = (53 * hash) + getCoverageJson().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static idb.XctestRunResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static idb.XctestRunResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static idb.XctestRunResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static idb.XctestRunResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static idb.XctestRunResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static idb.XctestRunResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static idb.XctestRunResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static idb.XctestRunResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static idb.XctestRunResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static idb.XctestRunResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static idb.XctestRunResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static idb.XctestRunResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(idb.XctestRunResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code idb.XctestRunResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:idb.XctestRunResponse)
      idb.XctestRunResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idb.Idb.internal_static_idb_XctestRunResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idb.Idb.internal_static_idb_XctestRunResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idb.XctestRunResponse.class, idb.XctestRunResponse.Builder.class);
    }

    // Construct using idb.XctestRunResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getResultsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      status_ = 0;

      if (resultsBuilder_ == null) {
        results_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        resultsBuilder_.clear();
      }
      logOutput_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (resultBundleBuilder_ == null) {
        resultBundle_ = null;
      } else {
        resultBundle_ = null;
        resultBundleBuilder_ = null;
      }
      coverageJson_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return idb.Idb.internal_static_idb_XctestRunResponse_descriptor;
    }

    @java.lang.Override
    public idb.XctestRunResponse getDefaultInstanceForType() {
      return idb.XctestRunResponse.getDefaultInstance();
    }

    @java.lang.Override
    public idb.XctestRunResponse build() {
      idb.XctestRunResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public idb.XctestRunResponse buildPartial() {
      idb.XctestRunResponse result = new idb.XctestRunResponse(this);
      int from_bitField0_ = bitField0_;
      result.status_ = status_;
      if (resultsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          results_ = java.util.Collections.unmodifiableList(results_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.results_ = results_;
      } else {
        result.results_ = resultsBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        logOutput_ = logOutput_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.logOutput_ = logOutput_;
      if (resultBundleBuilder_ == null) {
        result.resultBundle_ = resultBundle_;
      } else {
        result.resultBundle_ = resultBundleBuilder_.build();
      }
      result.coverageJson_ = coverageJson_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof idb.XctestRunResponse) {
        return mergeFrom((idb.XctestRunResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(idb.XctestRunResponse other) {
      if (other == idb.XctestRunResponse.getDefaultInstance()) return this;
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (resultsBuilder_ == null) {
        if (!other.results_.isEmpty()) {
          if (results_.isEmpty()) {
            results_ = other.results_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureResultsIsMutable();
            results_.addAll(other.results_);
          }
          onChanged();
        }
      } else {
        if (!other.results_.isEmpty()) {
          if (resultsBuilder_.isEmpty()) {
            resultsBuilder_.dispose();
            resultsBuilder_ = null;
            results_ = other.results_;
            bitField0_ = (bitField0_ & ~0x00000001);
            resultsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getResultsFieldBuilder() : null;
          } else {
            resultsBuilder_.addAllMessages(other.results_);
          }
        }
      }
      if (!other.logOutput_.isEmpty()) {
        if (logOutput_.isEmpty()) {
          logOutput_ = other.logOutput_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureLogOutputIsMutable();
          logOutput_.addAll(other.logOutput_);
        }
        onChanged();
      }
      if (other.hasResultBundle()) {
        mergeResultBundle(other.getResultBundle());
      }
      if (!other.getCoverageJson().isEmpty()) {
        coverageJson_ = other.coverageJson_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      idb.XctestRunResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (idb.XctestRunResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int status_ = 0;
    /**
     * <code>.idb.XctestRunResponse.Status status = 1;</code>
     * @return The enum numeric value on the wire for status.
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.idb.XctestRunResponse.Status status = 1;</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.idb.XctestRunResponse.Status status = 1;</code>
     * @return The status.
     */
    public idb.XctestRunResponse.Status getStatus() {
      @SuppressWarnings("deprecation")
      idb.XctestRunResponse.Status result = idb.XctestRunResponse.Status.valueOf(status_);
      return result == null ? idb.XctestRunResponse.Status.UNRECOGNIZED : result;
    }
    /**
     * <code>.idb.XctestRunResponse.Status status = 1;</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(idb.XctestRunResponse.Status value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.idb.XctestRunResponse.Status status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<idb.XctestRunResponse.TestRunInfo> results_ =
      java.util.Collections.emptyList();
    private void ensureResultsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        results_ = new java.util.ArrayList<idb.XctestRunResponse.TestRunInfo>(results_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        idb.XctestRunResponse.TestRunInfo, idb.XctestRunResponse.TestRunInfo.Builder, idb.XctestRunResponse.TestRunInfoOrBuilder> resultsBuilder_;

    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public java.util.List<idb.XctestRunResponse.TestRunInfo> getResultsList() {
      if (resultsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(results_);
      } else {
        return resultsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public int getResultsCount() {
      if (resultsBuilder_ == null) {
        return results_.size();
      } else {
        return resultsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public idb.XctestRunResponse.TestRunInfo getResults(int index) {
      if (resultsBuilder_ == null) {
        return results_.get(index);
      } else {
        return resultsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder setResults(
        int index, idb.XctestRunResponse.TestRunInfo value) {
      if (resultsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResultsIsMutable();
        results_.set(index, value);
        onChanged();
      } else {
        resultsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder setResults(
        int index, idb.XctestRunResponse.TestRunInfo.Builder builderForValue) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        results_.set(index, builderForValue.build());
        onChanged();
      } else {
        resultsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder addResults(idb.XctestRunResponse.TestRunInfo value) {
      if (resultsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResultsIsMutable();
        results_.add(value);
        onChanged();
      } else {
        resultsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder addResults(
        int index, idb.XctestRunResponse.TestRunInfo value) {
      if (resultsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResultsIsMutable();
        results_.add(index, value);
        onChanged();
      } else {
        resultsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder addResults(
        idb.XctestRunResponse.TestRunInfo.Builder builderForValue) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        results_.add(builderForValue.build());
        onChanged();
      } else {
        resultsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder addResults(
        int index, idb.XctestRunResponse.TestRunInfo.Builder builderForValue) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        results_.add(index, builderForValue.build());
        onChanged();
      } else {
        resultsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder addAllResults(
        java.lang.Iterable<? extends idb.XctestRunResponse.TestRunInfo> values) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, results_);
        onChanged();
      } else {
        resultsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder clearResults() {
      if (resultsBuilder_ == null) {
        results_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        resultsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public Builder removeResults(int index) {
      if (resultsBuilder_ == null) {
        ensureResultsIsMutable();
        results_.remove(index);
        onChanged();
      } else {
        resultsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public idb.XctestRunResponse.TestRunInfo.Builder getResultsBuilder(
        int index) {
      return getResultsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public idb.XctestRunResponse.TestRunInfoOrBuilder getResultsOrBuilder(
        int index) {
      if (resultsBuilder_ == null) {
        return results_.get(index);  } else {
        return resultsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public java.util.List<? extends idb.XctestRunResponse.TestRunInfoOrBuilder> 
         getResultsOrBuilderList() {
      if (resultsBuilder_ != null) {
        return resultsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(results_);
      }
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public idb.XctestRunResponse.TestRunInfo.Builder addResultsBuilder() {
      return getResultsFieldBuilder().addBuilder(
          idb.XctestRunResponse.TestRunInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public idb.XctestRunResponse.TestRunInfo.Builder addResultsBuilder(
        int index) {
      return getResultsFieldBuilder().addBuilder(
          index, idb.XctestRunResponse.TestRunInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .idb.XctestRunResponse.TestRunInfo results = 2;</code>
     */
    public java.util.List<idb.XctestRunResponse.TestRunInfo.Builder> 
         getResultsBuilderList() {
      return getResultsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        idb.XctestRunResponse.TestRunInfo, idb.XctestRunResponse.TestRunInfo.Builder, idb.XctestRunResponse.TestRunInfoOrBuilder> 
        getResultsFieldBuilder() {
      if (resultsBuilder_ == null) {
        resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            idb.XctestRunResponse.TestRunInfo, idb.XctestRunResponse.TestRunInfo.Builder, idb.XctestRunResponse.TestRunInfoOrBuilder>(
                results_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        results_ = null;
      }
      return resultsBuilder_;
    }

    private com.google.protobuf.LazyStringList logOutput_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureLogOutputIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        logOutput_ = new com.google.protobuf.LazyStringArrayList(logOutput_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @return A list containing the logOutput.
     */
    public com.google.protobuf.ProtocolStringList
        getLogOutputList() {
      return logOutput_.getUnmodifiableView();
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @return The count of logOutput.
     */
    public int getLogOutputCount() {
      return logOutput_.size();
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @param index The index of the element to return.
     * @return The logOutput at the given index.
     */
    public java.lang.String getLogOutput(int index) {
      return logOutput_.get(index);
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the logOutput at the given index.
     */
    public com.google.protobuf.ByteString
        getLogOutputBytes(int index) {
      return logOutput_.getByteString(index);
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @param index The index to set the value at.
     * @param value The logOutput to set.
     * @return This builder for chaining.
     */
    public Builder setLogOutput(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureLogOutputIsMutable();
      logOutput_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @param value The logOutput to add.
     * @return This builder for chaining.
     */
    public Builder addLogOutput(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureLogOutputIsMutable();
      logOutput_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @param values The logOutput to add.
     * @return This builder for chaining.
     */
    public Builder addAllLogOutput(
        java.lang.Iterable<java.lang.String> values) {
      ensureLogOutputIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, logOutput_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogOutput() {
      logOutput_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string log_output = 3;</code>
     * @param value The bytes of the logOutput to add.
     * @return This builder for chaining.
     */
    public Builder addLogOutputBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureLogOutputIsMutable();
      logOutput_.add(value);
      onChanged();
      return this;
    }

    private idb.Payload resultBundle_;
    private com.google.protobuf.SingleFieldBuilderV3<
        idb.Payload, idb.Payload.Builder, idb.PayloadOrBuilder> resultBundleBuilder_;
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     * @return Whether the resultBundle field is set.
     */
    public boolean hasResultBundle() {
      return resultBundleBuilder_ != null || resultBundle_ != null;
    }
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     * @return The resultBundle.
     */
    public idb.Payload getResultBundle() {
      if (resultBundleBuilder_ == null) {
        return resultBundle_ == null ? idb.Payload.getDefaultInstance() : resultBundle_;
      } else {
        return resultBundleBuilder_.getMessage();
      }
    }
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     */
    public Builder setResultBundle(idb.Payload value) {
      if (resultBundleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resultBundle_ = value;
        onChanged();
      } else {
        resultBundleBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     */
    public Builder setResultBundle(
        idb.Payload.Builder builderForValue) {
      if (resultBundleBuilder_ == null) {
        resultBundle_ = builderForValue.build();
        onChanged();
      } else {
        resultBundleBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     */
    public Builder mergeResultBundle(idb.Payload value) {
      if (resultBundleBuilder_ == null) {
        if (resultBundle_ != null) {
          resultBundle_ =
            idb.Payload.newBuilder(resultBundle_).mergeFrom(value).buildPartial();
        } else {
          resultBundle_ = value;
        }
        onChanged();
      } else {
        resultBundleBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     */
    public Builder clearResultBundle() {
      if (resultBundleBuilder_ == null) {
        resultBundle_ = null;
        onChanged();
      } else {
        resultBundle_ = null;
        resultBundleBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     */
    public idb.Payload.Builder getResultBundleBuilder() {
      
      onChanged();
      return getResultBundleFieldBuilder().getBuilder();
    }
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     */
    public idb.PayloadOrBuilder getResultBundleOrBuilder() {
      if (resultBundleBuilder_ != null) {
        return resultBundleBuilder_.getMessageOrBuilder();
      } else {
        return resultBundle_ == null ?
            idb.Payload.getDefaultInstance() : resultBundle_;
      }
    }
    /**
     * <code>.idb.Payload result_bundle = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        idb.Payload, idb.Payload.Builder, idb.PayloadOrBuilder> 
        getResultBundleFieldBuilder() {
      if (resultBundleBuilder_ == null) {
        resultBundleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            idb.Payload, idb.Payload.Builder, idb.PayloadOrBuilder>(
                getResultBundle(),
                getParentForChildren(),
                isClean());
        resultBundle_ = null;
      }
      return resultBundleBuilder_;
    }

    private java.lang.Object coverageJson_ = "";
    /**
     * <code>string coverage_json = 5;</code>
     * @return The coverageJson.
     */
    public java.lang.String getCoverageJson() {
      java.lang.Object ref = coverageJson_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        coverageJson_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string coverage_json = 5;</code>
     * @return The bytes for coverageJson.
     */
    public com.google.protobuf.ByteString
        getCoverageJsonBytes() {
      java.lang.Object ref = coverageJson_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coverageJson_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string coverage_json = 5;</code>
     * @param value The coverageJson to set.
     * @return This builder for chaining.
     */
    public Builder setCoverageJson(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      coverageJson_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string coverage_json = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCoverageJson() {
      
      coverageJson_ = getDefaultInstance().getCoverageJson();
      onChanged();
      return this;
    }
    /**
     * <code>string coverage_json = 5;</code>
     * @param value The bytes for coverageJson to set.
     * @return This builder for chaining.
     */
    public Builder setCoverageJsonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      coverageJson_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:idb.XctestRunResponse)
  }

  // @@protoc_insertion_point(class_scope:idb.XctestRunResponse)
  private static final idb.XctestRunResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new idb.XctestRunResponse();
  }

  public static idb.XctestRunResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<XctestRunResponse>
      PARSER = new com.google.protobuf.AbstractParser<XctestRunResponse>() {
    @java.lang.Override
    public XctestRunResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new XctestRunResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<XctestRunResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<XctestRunResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public idb.XctestRunResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

